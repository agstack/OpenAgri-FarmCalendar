# Generated by Django 5.0.4 on 2024-10-22 11:50

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.AutoField(db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Farm',
                'verbose_name_plural': 'Farms',
            },
        ),
        migrations.CreateModel(
            name='Fertilizer',
            fields=[
                ('id', models.AutoField(db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_unit', models.CharField(max_length=255)),
                ('active_substance', models.CharField(max_length=255)),
                ('targeted_towards', models.CharField(max_length=255)),
                ('nutrient_concentration', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'verbose_name': 'Fertilizer',
                'verbose_name_plural': 'Fertilizers',
            },
        ),
        migrations.CreateModel(
            name='Pesticide',
            fields=[
                ('id', models.AutoField(db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_unit', models.CharField(max_length=255)),
                ('active_substance', models.CharField(max_length=255)),
                ('targeted_towards', models.CharField(max_length=255)),
                ('preharvest_interval', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Pesticide',
                'verbose_name_plural': 'Pesticides',
            },
        ),
        migrations.CreateModel(
            name='FarmParcel',
            fields=[
                ('id', models.AutoField(db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('geo_id', models.UUIDField(blank=True, null=True, verbose_name='Georaphic Data ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('coordinates', models.CharField(max_length=255)),
                ('area', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cultivation_type', models.CharField(choices=[('grapes', 'Grapes'), ('potato', 'Potato'), ('pasture', 'Pasture')], default='grapes', max_length=50)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='farm_management.farm')),
            ],
            options={
                'verbose_name': 'Farm Parcel',
                'verbose_name_plural': 'Farm Parcels',
            },
        ),
        migrations.CreateModel(
            name='FarmCrop',
            fields=[
                ('id', models.AutoField(db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('geo_id', models.UUIDField(blank=True, null=True, verbose_name='Geographic Data ID')),
                ('species', models.CharField(max_length=255)),
                ('variety', models.CharField(blank=True, max_length=255, null=True)),
                ('parcel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='farm_management.farmparcel')),
            ],
            options={
                'verbose_name': 'Farm Plant',
                'verbose_name_plural': 'Farm Plants',
            },
        ),
        migrations.CreateModel(
            name='FarmAnimal',
            fields=[
                ('id', models.AutoField(db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('geo_id', models.UUIDField(blank=True, null=True, verbose_name='Geographic Data ID')),
                ('species', models.CharField(max_length=255)),
                ('breed', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_date', models.DateTimeField()),
                ('sex', models.IntegerField(choices=[(0, 'N/A'), (1, 'Female'), (2, 'Male')], default=0)),
                ('age', models.IntegerField()),
                ('number_of_animals', models.IntegerField(default=1)),
                ('castrated', models.BooleanField(default=False)),
                ('parcel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='farm_management.farmparcel')),
            ],
            options={
                'verbose_name': 'Farm Animal',
                'verbose_name_plural': 'Farm Animals',
            },
        ),
        migrations.CreateModel(
            name='AgriculturalMachine',
            fields=[
                ('id', models.AutoField(db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('geo_id', models.UUIDField(blank=True, null=True, verbose_name='Geographic Data ID')),
                ('purchase_date', models.DateField()),
                ('manufacturer', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255)),
                ('seria_number', models.CharField(max_length=255)),
                ('parcel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='farm_management.farmparcel')),
            ],
            options={
                'verbose_name': 'Farm Equipment',
                'verbose_name_plural': 'Farm Equipments',
            },
        ),
        migrations.CreateModel(
            name='FarmSensor',
            fields=[
                ('id', models.AutoField(db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('geo_id', models.UUIDField(blank=True, null=True, verbose_name='Geographic Data ID')),
                ('sensor_type', models.CharField()),
                ('public', models.BooleanField(default=False)),
                ('parcel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)ss', to='farm_management.farmparcel')),
            ],
            options={
                'verbose_name': 'Farm Sensor',
                'verbose_name_plural': 'Farm Sensors',
            },
        ),
        migrations.CreateModel(
            name='HistoricalAgriculturalMachine',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True, editable=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('geo_id', models.UUIDField(blank=True, null=True, verbose_name='Geographic Data ID')),
                ('purchase_date', models.DateField()),
                ('manufacturer', models.CharField(max_length=255)),
                ('model', models.CharField(max_length=255)),
                ('seria_number', models.CharField(max_length=255)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parcel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_management.farmparcel')),
            ],
            options={
                'verbose_name': 'historical Farm Equipment',
                'verbose_name_plural': 'historical Farm Equipments',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFarm',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True, editable=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Farm',
                'verbose_name_plural': 'historical Farms',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFarmAnimal',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True, editable=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('geo_id', models.UUIDField(blank=True, null=True, verbose_name='Geographic Data ID')),
                ('species', models.CharField(max_length=255)),
                ('breed', models.CharField(blank=True, max_length=255, null=True)),
                ('birth_date', models.DateTimeField()),
                ('sex', models.IntegerField(choices=[(0, 'N/A'), (1, 'Female'), (2, 'Male')], default=0)),
                ('age', models.IntegerField()),
                ('number_of_animals', models.IntegerField(default=1)),
                ('castrated', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parcel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_management.farmparcel')),
            ],
            options={
                'verbose_name': 'historical Farm Animal',
                'verbose_name_plural': 'historical Farm Animals',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFarmCrop',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True, editable=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('geo_id', models.UUIDField(blank=True, null=True, verbose_name='Geographic Data ID')),
                ('species', models.CharField(max_length=255)),
                ('variety', models.CharField(blank=True, max_length=255, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parcel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_management.farmparcel')),
            ],
            options={
                'verbose_name': 'historical Farm Plant',
                'verbose_name_plural': 'historical Farm Plants',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFarmParcel',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True, editable=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('geo_id', models.UUIDField(blank=True, null=True, verbose_name='Georaphic Data ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('coordinates', models.CharField(max_length=255)),
                ('area', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cultivation_type', models.CharField(choices=[('grapes', 'Grapes'), ('potato', 'Potato'), ('pasture', 'Pasture')], default='grapes', max_length=50)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('farm', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_management.farm')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Farm Parcel',
                'verbose_name_plural': 'historical Farm Parcels',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFarmSensor',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True, editable=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('geo_id', models.UUIDField(blank=True, null=True, verbose_name='Geographic Data ID')),
                ('sensor_type', models.CharField()),
                ('public', models.BooleanField(default=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parcel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='farm_management.farmparcel')),
            ],
            options={
                'verbose_name': 'historical Farm Sensor',
                'verbose_name_plural': 'historical Farm Sensors',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalFertilizer',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True, editable=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_unit', models.CharField(max_length=255)),
                ('active_substance', models.CharField(max_length=255)),
                ('targeted_towards', models.CharField(max_length=255)),
                ('nutrient_concentration', models.DecimalField(decimal_places=2, max_digits=5)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Fertilizer',
                'verbose_name_plural': 'historical Fertilizers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPesticide',
            fields=[
                ('id', models.IntegerField(blank=True, db_index=True, editable=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Active'), (1, 'Deleted')], default=0)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_unit', models.CharField(max_length=255)),
                ('active_substance', models.CharField(max_length=255)),
                ('targeted_towards', models.CharField(max_length=255)),
                ('preharvest_interval', models.IntegerField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Pesticide',
                'verbose_name_plural': 'historical Pesticides',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
